<!doctype html>
<html lang="en">
	<head>
		<% include head %>
		<% include css %>
	</head>
	<body>
		<% include menu %>
		<div class="container">
            <div class="row">
            	<div class="col-md-12"> <!-- Main content -->
            		<div class="row"> <!-- Demo -->
                        <h1>
                            <strong><%= docID %></strong>
                            <span class="pull-right">
                                <button id="btnHistoryMode" class="btn btn-default" onclick="switchToHistoryMode()">
                                    <span class="glyphicon glyphicon-time" ></span>
                                    Switch to history mode
                                </button>
                                <button id="btnEditionMode" class="btn btn-default hide" onclick="switchToEditionMode()">
                                    <span class="glyphicon glyphicon-pencil"></span>
                                    Switch to edition mode
                                </button>
                                <button id="btnOnlineMode" class="btn btn-default" onclick="switchToOnlineMode()">
                                    <span class="glyphicon glyphicon-log-in" ></span>
                                    Switch to online mode
                                </button>
                                <button id="btnOfflineMode" class="btn btn-default hide" onclick="switchToOfflineMode()">
                                    <span class="glyphicon glyphicon-log-out"></span>
                                    Switch to offline mode
                                </button>
                                <div id="connectionIndicator" class="offline-ui offline-ui-down">
                                    Offline!
                                </div>
                            </span>
                        </h1>
            			<div class="col-md-10 col-md-offset-1">
            				<div id="historySlider" class="range range-primary hide">
                                <button class="btn btn-default btn-sm" type="button" onclick="prevState()">
                                    <span class="glyphicon glyphicon-chevron-left"></span>
                                </button>
                                <input id="range" type="range" name="range" min="0" max="1" value="1" oninput="displayState();" onclick="displayState();">
                                <output id="rangePrimary">0</output>
                                <button class="btn btn-default btn-sm" type="button" onclick="nextState()">
                                    <span class="glyphicon glyphicon-chevron-right"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <hr>
        <div class="row">
            <button id="btnPanelController" class="btn btn-default pull-right" style="margin-right: 30px;" onclick="hideCollaboratorsList();">
                <span id="panelControllerIcon" class="glyphicon glyphicon-arrow-right"></span>
                <span id="panelControllerLabel">Hide list</span>
            </button>
        </div>
        <div class="row">
            <div class="col-md-9" id="divMain" style="padding-right: 0px;">
                <% include editor %>
            </div>
            <div class="col-md-3" id="divInfosSup" style="padding-top: 15px; padding-left:0px; padding-right: 30px;">


                <div class="panel-group">
                    <div class="panel panel-default" style="overflow: visible;">
                        <div class="panel-heading" style="border: 1px solid #ddd">
                            <h4 class="panel-title">
                                <span class="fa fa-microphone fa-lg" style="margin-right: 10px;"></span>
                                <strong>Voice recognition</strong>
                            </h4>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse in">
                            <div class="row" style="margin-top: 15px; margin-bottom: 15px;">
                                <div class="col-md-6 col-md-offset-1">
                                    <select type="select" class="form-control" id="select-lang-voice-recognition"></select>
                                </div>
                                <div class="col-md-2 col-md-offset-1">
                                    <button id="btn-voice-recognition" class="btn btn-default"></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel-group">
                    <div class="panel panel-default" style="border: 0px; box-shadow: 0 0px 0px;">
                        <div class="panel-heading" style="border: 1px solid #ddd">
                            <h4 class="panel-title">
                                <span class="glyphicon glyphicon-th-list" style="margin-right: 10px;"></span>
                                <strong>Collaborators</strong>
                            </h4>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse in">
                            <ul class="list-group" style="margin-bottom: 0px;">
                                <li class="list-group-item">
                                    <span class="glyphicon glyphicon-user"></span>
                                    <input type="text" maxlength="20" class="form-control" style="width: 80%; display: inline; margin-left: 10px;" id="inputUsername" placeholder="Enter username">
                                </li>
                            </ul>
                            <ul id="list-collaborators" class="list-group">
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="panel-group">
                    <div class="panel panel-default" style="border: 0px; box-shadow: 0 0px 0px;">
                        <div class="panel-heading" style="border: 1px solid #ddd">
                            <h4 class="panel-title">
                                <span class="glyphicon glyphicon-comment" style="margin-right: 10px;"></span>
                                <strong>Paroles</strong>
                                <input id="paroles-change-mode-1" type="checkbox" class="pull-right">
                            </h4>
                        </div>
                        <div id="collapseTwo" class="panel-collapse collapse in">
                            <ul id="list-paroles" class="list-group" style="max-height: 300px; overflow-y: scroll;">
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
            		<div class="row">
                        <div class="col-md-6">
                           <% include awareness %>
                        </div>
                        <div class="col-md-6">
                            <form class="form-horizontal" role="form">
                                <div class="form-group">
                                    <label for="link" class="col-sm-5 control-label">Invite your friends:</label>
                                    <div class="col-sm-7">
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="link" value="<%= link %>" readonly="readonly" style="background-color: white;">
                                            <span class="input-group-btn">
                                                <button type="button" id="copy-button" class="btn btn-default" data-clipboard-text="<%= link %>" data-toggle="tooltip" data-placement="bottom" title="copy to clipboard" style="height:34px;">
                                                    <img src="/assets/img/icon-clipboard.png">
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
            	</div>
            </div>
           	<hr>
            <% include footer %>
        </div>
        <div class="modal fade" id="modalCloseTab" tabindex="-1" role="dialog" aria-labelledby="modalCloseTabLabel" data-backdrop="static" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="modalCloseTabLabel">Open in a new tab</h4>
                    </div>
                    <div id="modal-body" class="modal-body">
                        <p class="lead">
                            This document has been opened in another tab/window. In order to avoid some mischievous bugs, you can no longer edit this document using this tab/window. Please go back to your documents list.
                        </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Dismiss pop-up
                        </button>
                        <a href="/list" type="button" class="btn btn-primary">
                            <span class="glyphicon glyphicon-list"></span>
                            Documents list
                        </a>
                    </div>
                </div>
            </div>
        </div>

		<% include scripts %>
		<% include scripts-editor %>
        <script src="/assets/js/awareness-modules/copy-link.js"></script>
        <script src="/assets/js/awareness-modules/modification-date.js"></script>
        <script src="/assets/js/awareness-modules/remote-indicators.js"></script>
        <script src="/assets/js/awareness-modules/collaborators-list.js"></script>
        <script src="/assets/js/awareness-modules/username.js"></script>
        <script src="/assets/js/awareness-modules/paroles.js"></script>
        <script src="/assets/js/awareness-modules/voice-recognition.js"></script>
        <% include script-dbjs %>
		<% include notifications %>
		<% 
        	if(privateDoc === true) { 
        		%> <% include modal-pwd-doc %> <%
        	}
        %>
		<script>
			"use strict";
            var version = 0;

            var timeoutUpdateUsername = null;
            var serverDB;
            var client;
            var coordinator;
            var editor;
            var network;
            var awareness;
            var infosUsersModule;

            var online = false;
            var posting = $.post('/ajax/testConnection');
            posting.done(function (data) {
                online = true;
            });
            posting.always(function () {
                openDB()
                .done(function (s) {
                    console.log('On passe ici ?');
                    serverDB = s
                    serverDB.docs.query()
                    .filter('docID', '<%= docID %>')
                    .execute()
                    .done(function (results) {
                        var doc;
                        if(results.length === 0) {
                            version = 1;
                            doc = {
                                docID: '<%= docID %>',
                                version: 1
                            };
                            serverDB.docs.add(doc)
                            .done(function (item) {
                                initPage();
                            });
                        }
                        else {
                            version = results[0].version + 1;
                            serverDB.docs.query()
                            .filter('docID', '<%= docID %>')
                            .modify({ version: version })
                            .execute()
                            .done(function (results) {
                                initPage();
                            });
                        }

                        var interval = setInterval(function () {
                            serverDB.docs.query()
                            .filter('docID', '<%= docID %>')
                            .execute()
                            .done(function (results) {
                                if(results.length === 1) {
                                    if(results[0].version !== version) {
                                        console.log(results[0].version + ' !== ' + version);
                                        $('#modalCloseTab').modal('show');
                                        coordinator.dispose();
                                        network.dispose();
                                        editor.disable();

                                        serverDB.close();

                                        coordinator = null;
                                        editor = null;
                                        network = null;
                                        clearInterval(interval);
                                    }
                                }
                            });
                        }, 3000);
                    });

                });
            });

            function initMute() {
                coordinator.setEditor(editor);
                if(online === true) {
                    network = new Mute.SocketIOAdapter(coordinator);
                    infosUsersModule = new Mute.InfosUsersModule('<%= docID %>', coordinator, editor, network, null, serverDB);
                    editor.setInfosUsersModule(infosUsersModule);
                    network.setInfosUsersModule(infosUsersModule);
                    $('#inputUsername').UsernameModule({
                        infosUsersModule: infosUsersModule
                    });
                    $('#list-collaborators').collaboratorsListModule({
                        infosUsersModule: infosUsersModule,
                        listCSSClasses: ['mute-collaborator-indicator-0', 'mute-collaborator-indicator-1', 'mute-collaborator-indicator-2']
                    });
                    $('#list-paroles').parolesModule({
                        network: network,
                        textEditorAdapter: editor,
                        modeSwitch: 'paroles-change-mode-1'
                    });
                    $('#btn-voice-recognition').voiceRecognitionModule({
                        langSelect: 'select-lang-voice-recognition'
                    });
                    $().remoteIndicatorsModule({ 
                        infosUsersModule: infosUsersModule,
                        textEditorAdapter: editor,
                        networkAdapter: network,
                        cursorsCSSClasses: ['mute-remote-cursor-0', 'mute-remote-cursor-1', 'mute-remote-cursor-2'],
                        selectionsCSSClasses: ['mute-remote-selection-0', 'mute-remote-selection-1', 'mute-remote-selection-2']
                    });
                    coordinator.setNetwork(network);
                    network.on('disconnect', function () {
                        $('#btnOfflineMode').addClass('hide');
                        $('#btnOnlineMode').removeClass('hide');
                        $('#connectionIndicator').removeClass('offline-ui-up').addClass('offline-ui-down').html('Offline!');
                    });
                    network.on('connect', function () {
                        $('#btnOnlineMode').addClass('hide');
                        $('#btnOfflineMode').removeClass('hide');
                        $('#connectionIndicator').removeClass('offline-ui-down').addClass('offline-ui-up').html('Online!');
                    });
                }
                coordinator.on('initEditor', function (data) {
                    str = '';
                    currentState = 0;
                });
                coordinator.on('updateHistoryScrollerRange', function (data) {
                    $('#range').attr('max', data.length);
                    //displayState();
                });
                coordinator.on('updateHistoryScrollerValue', function (data) {
                    $('#range').attr('value', data.length);
                    displayState();
                });

                coordinator.init();
            }

            function initPage () {
                hljs.initHighlightingOnLoad();

                if(online === true) {
                    $('#copy-button').copyLinkModule();
                }

                coordinator = new Mute.Coordinator('<%= docID %>', serverDB);
                editor = new Mute.AceEditorAdapter('<%= editorID %>', coordinator);

                $('#<%= lastModificationDateItemID %>').lastModificationDateModule({ coordinator: coordinator });
                if(<%= privateDoc %> === false) {
                    initMute();
                }
            }

            var currentState = 0;
            var str = '';

            function prevState() {
                $('#range').val(currentState-1);
                displayState();
            }

            function nextState() {
                $('#range').val(currentState+1);
                displayState();
            }

            function displayState() {
                var newState = parseInt($('#range').val());
                $('#rangePrimary').val(newState);
                if(currentState <= coordinator.getHistoryLength()) {
                    str = coordinator.updateState(str, currentState, newState);    
                }
                currentState = newState;
                if(editor.isInHistoryMode()) {
                    editor.editor.session.doc.setValue(str);
                }
            }

            function switchToHistoryMode() {
                var length = coordinator.getHistoryLength();
                $('#btnHistoryMode').addClass('hide');
                $('#btnEditionMode').removeClass('hide');
                $('#historySlider').removeClass('hide');
                coordinator.editor.toHistoryMode();
                $('#range').attr('max', length);
                displayState();
            }

            function switchToEditionMode() {
                $('#btnEditionMode').addClass('hide');
                $('#historySlider').addClass('hide');
                $('#btnHistoryMode').removeClass('hide');
                editor.editor.session.doc.setValue(coordinator.ropes.str);
                coordinator.editor.toEditionMode();
            }

            function switchToOnlineMode() {
                console.log('switchToOnlineMode');
                coordinator.toOnlineMode();
            }

            function switchToOfflineMode() {
                console.log('switchToOfflineMode');
                coordinator.toOfflineMode();
            }

            console.log('docID: <%= docID %>');

            function showCollaboratorsList() {
                $('#divMain').animate({ width: '75%' });
                $('#divInfosSup').animate({ width: '25%' }).show();
                setTimeout(function () { 
                    editor.editor.resize();
                    $('#panelControllerLabel').html('Hide list');
                    $('#panelControllerIcon').removeClass('glyphicon-arrow-left').addClass('glyphicon-arrow-right');
                    $('#btnPanelController').attr('onclick', 'hideCollaboratorsList()');
                }, 400);

            }

            function hideCollaboratorsList() {
                $('#divInfosSup').animate({ width: '0%'}).hide();
                $('#divMain').animate({ width: '100%'});
                setTimeout(function () { 
                    editor.editor.resize();
                    $('#panelControllerLabel').html('Show list');
                    $('#panelControllerIcon').removeClass('glyphicon-arrow-right').addClass('glyphicon-arrow-left');
                    $('#btnPanelController').attr('onclick', 'showCollaboratorsList()');
                }, 400);
            }


            /*
            if ('webkitSpeechRecognition' in window) {
                var recognition = new webkitSpeechRecognition();
                console.log('recognition: ', recognition);
                recognition.continuous = true;
                recognition.interimResults = true;

                //var final_transcript = '';

                recognition.onstart = function() {
                    console.log('On démarre');
                }
                recognition.onresult = function(event) {
                    //var interim_transcript = '';
                    console.log('Ici');
                    for (var i = event.resultIndex; i < event.results.length; ++i) {
                        if (event.results[i].isFinal) {
                            //final_transcript += event.results[i][0].transcript;
                            $.post('http://localhost:8080/rest/paroles/demo/', {
                                parole: event.results[i][0].transcript
                            });
                            //final_transcript = '';
                        } 
                        /*
                        else {
                            interim_transcript += event.results[i][0].transcript;
                        }*/
                    //}
                    //console.log('interim_transcript :', interim_transcript);
                    //console.log('final_transcript: ', final_transcript);
                //}
                /*
                recognition.onerror = function(event) {
                    console.log('Ca plante');
                }
                recognition.onend = function() {
                    console.log('Ca finit');
                }
                
                recognition.lang = 'fr-FR';
                console.log('start: ', recognition.start);
                recognition.start();
                console.log('recognition 2: ', recognition);
            }
            */
        </script>
	</body>
</html>