vars it, p

p = ***REMOVED***label, value|
  print("\n" + label)
  print(inspect(value))
***REMOVED***
-- Create an array from 0 to 15
p("range", i-collect(range(5)))

-- Create an array from 0 to 15 and break up in chunks of 4
p("chunked range", i-collect(i-chunk(4, range(16))))

-- Check if all or none items in stream pass test.
p("all < 60 in range(60)", i-all?(***REMOVED***i|i<60***REMOVED***, range(60)))
p("any < 60 in range(60)", i-any?(***REMOVED***i|i>60***REMOVED***, range(60)))
p("all < 60 in range(70)", i-all?(***REMOVED***i|i<60***REMOVED***, range(70)))
p("any < 60 in range(70)", i-any?(***REMOVED***i|i>60***REMOVED***, range(70)))

-- Zip three different collections together
p("zipped", i-collect(i-zip(
  range(10),
  [1,2,3,4,5],
  i-map(***REMOVED***i|i*i***REMOVED***, range(10))
)))

vars names, person, i, doubles, lengths, cubeRange
names = ["Thorin", "Dwalin", "Balin", "Bifur", "Bofur", "Bombur", "Oin",
         "Gloin", "Ori", "Nori", "Dori", "Fili", "Kili", "Bilbo", "Gandalf"]

for name in names ***REMOVED***
  if name != "Bilbo" && name != "Gandalf" ***REMOVED***
    print(name)
  ***REMOVED***
***REMOVED***

person = ***REMOVED***name: "Tim", age: 30***REMOVED***
for key, value in person ***REMOVED***
  print(key + " = " + value)
***REMOVED***

i = 0
while i < 10 ***REMOVED***
  i = i + 1
  print(i)
***REMOVED***

print("range")
for i in range(10) ***REMOVED***
  print(i + 1)
***REMOVED***
for i in range(10) ***REMOVED***
  print(10 - i)
***REMOVED***

-- Dynamic object that gives the first 10 doubles
doubles = ***REMOVED***
  @len: ***REMOVED***| 10 ***REMOVED***
  @get: ***REMOVED***key|
    if key is Integer ***REMOVED*** key * key ***REMOVED***
  ***REMOVED***
***REMOVED***
print("#doubles", #doubles)

print("Doubles")
for k, v in doubles ***REMOVED***
  print([k, v])
***REMOVED***

-- Dynamic object that has names list as keys and string lenth as values
lengths = ***REMOVED***
  @keys: ***REMOVED***| names ***REMOVED***
  @get: ***REMOVED***key|
    if key is String ***REMOVED*** #key ***REMOVED***
  ***REMOVED***
***REMOVED***

print ("Lengths")
for k, v in lengths ***REMOVED***
  print([k, v])
***REMOVED***


cubeRange = ***REMOVED***n|
  vars i, v
  i = 0
  ***REMOVED***
    @call: ***REMOVED***|
      v = i
      i = i + 1
      if v < n ***REMOVED*** v * v * v ***REMOVED***
***REMOVED***
  ***REMOVED***
***REMOVED***

print("Cubes")
for k, v in cubeRange(5) ***REMOVED***
  print([k, v])
***REMOVED***
print("String")
for k, v in "Hello World" ***REMOVED***
  print([k, v])
***REMOVED***


print([i for i in range(10)])
print([i for i in range(20) if i % 3])



-- Example showing how to do parallel work using split..and
base = ***REMOVED***bootstrap, target-dir|
  split ***REMOVED***
    copy("res", target-dir)
  ***REMOVED*** and ***REMOVED***
    if newer("src/*.less", target-dir + "/style.css") ***REMOVED***
      lessc("src/" + bootstrap + ".less", target-dir + "/style.css")
***REMOVED***
  ***REMOVED*** and ***REMOVED***
    build("src/" + bootstrap + ".js", target-dir + "/app.js")
  ***REMOVED***
***REMOVED***


vars Dragon, pet

Dragon = ***REMOVED***name|
  vars asleep, stuff-in-belly, stuff-in-intestine,
       feed, walk, put-to-bed, toss, rock,
       hungry?, poopy?, passage-of-time

  asleep = false
  stuff-in-belly     = 10 -- He's full.
  stuff-in-intestine =  0 -- He doesn't need to go.

  print(name + ' is born.')

  feed = ***REMOVED***|
    print('You feed ' + name + '.')
    stuff-in-belly = 10
    passage-of-time()
  ***REMOVED***

  walk = ***REMOVED***|
    print('You walk ' + name + ".")
    stuff-in-intestine = 0
    passage-of-time
  ***REMOVED***

  put-to-bed = ***REMOVED***|
    print('You put ' + name + ' to bed.')
    asleep = true
    for i in range(3) ***REMOVED***
      if asleep ***REMOVED***
        passage-of-time()
  ***REMOVED***
      if asleep ***REMOVED***
        print(name + ' snores, filling the room with smoke.')
  ***REMOVED***
***REMOVED***
    if asleep ***REMOVED***
      asleep = false
      print(name + ' wakes up slowly.')
***REMOVED***
  ***REMOVED***

  toss = ***REMOVED***|
    print('You toss ' + name + ' up into the air.')
    print('He giggles, which singes your eyebrows.')
    passage-of-time()
  ***REMOVED***

  rock = ***REMOVED***|
    print('You rock ' + name + ' gently.')
    asleep = true
    print('He briefly dozes off...')
    passage-of-time()
    if asleep ***REMOVED***
      asleep = false
      print('...but wakes when you stop.')
***REMOVED***
  ***REMOVED***

  hungry? = ***REMOVED***|
    stuff-in-belly <= 2
  ***REMOVED***

  poopy? = ***REMOVED***|
    stuff-in-intestine >= 8
  ***REMOVED***

  passage-of-time = ***REMOVED***|
    if stuff-in-belly > 0 ***REMOVED***
      -- Move food from belly to intestine
      stuff-in-belly     = stuff-in-belly     - 1
      stuff-in-intestine = stuff-in-intestine + 1
***REMOVED*** else ***REMOVED*** -- Our dragon is starving!
      if asleep ***REMOVED***
        asleep = false
        print('He wakes up suddenly!')
  ***REMOVED***
      print(name + ' is starving! In desperation, he ate YOU!')
      abort "died"
***REMOVED***

    if stuff-in-intestine >= 10 ***REMOVED***
      stuff-in-intestine = 0
      print('Whoops! ' + name + ' had an accident...')
***REMOVED***

    if hungry?() ***REMOVED***
      if asleep ***REMOVED***
        asleep = false
        print('He wakes up suddenly!')
  ***REMOVED***
      print(name + "'s stomach grumbles...")
***REMOVED***

    if poopy?() ***REMOVED***
      if asleep ***REMOVED***
        asleep = false
        print('He wakes up suddenly!')
  ***REMOVED***
      print(name + ' does the potty dance...')
***REMOVED***
  ***REMOVED***

  -- Export the public interface to this closure object.
  ***REMOVED***
   feed: feed
   walk: walk
   put-to-bed: put-to-bed
   toss: toss
   rock: rock
  ***REMOVED***

***REMOVED***

pet = Dragon('Norbert')
pet.feed()
pet.toss()
pet.walk()
pet.put-to-bed()
pet.rock()
pet.put-to-bed()
pet.put-to-bed()
pet.put-to-bed()
pet.put-to-bed()
